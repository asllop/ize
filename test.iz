// This is a comment

#import("models/newrelic.iz")

struct User:
    timestamp as "time.ms": Integer
    name: String
    surname: String
    type: String("free", "full", "admin")
    birthday:
        year: Integer(1900..2023)
        month: Integer(1..12)
        day: Integer(1..31)
    range: Float(0.99..1.99)
    whatever : Integer | None
    something:Map<String,List<Integer>>
    address: Address | Null
    other: ...

struct Address:
    street: String
    number: Integer

struct Something:
    pattern: String(Regex("^[a-zA-Z0-9_]+$"))

dyn NewIntType<Integer>

const MY_NUM = 1001
const UNICODE_üçí_NAME = 0
const MY_STR = "This is \t \t\h\x\s\\\n\a an \"escaped\" \r \0 \w \xAB string unicode: üçí 'yeha' \\backslash\\\n"
const NEATIVE_F = -9.09
const NEATIVE_I = -9

#on_error(abort)
transfer my_sum(input: List<Integer | Float>) -> Integer | Float:
    match input:
        Integer as i:
            out = i.sum()
            if out > 255:
                out = 255
        Float as f:
            out = f.sum()
        _:  // This is not necessary here
            out = 0
    out

transfer my_transfer(input: User) -> Integer:
    match input:
        .type = "free", .name = "Foo":
            do_foo()
        .type = "free", .name = "Bar":
            do_bar()
        .type = "admin":
            do_admin()
        _:
            do_else()
    0

pipeline main:
    from_json
    my_sum
    whatever:
        opts:
            name: "Hello this is a name"
            num: 2001
            fnum: 20.01
            flag: true
